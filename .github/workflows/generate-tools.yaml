name: "Build tools"
on:
  pull_request:
    paths-ignore:
      - 'spectool/**'

jobs:
  build_tools:
    name: Build all tools for ${{ matrix.target.name }}
    runs-on: ${{ matrix.target.os }}
    strategy:
      fail-fast: false
      matrix:
        target: [
          {"name": "Linux GCC 14",     "os": "ubuntu-latest",  "cmake_env": "CC=gcc-14"},
          {"name": "Linux Clang 18",   "os": "ubuntu-latest",  "cmake_env": "CC=clang-18"},
          {"name": "Linux GCC 9",      "os": "ubuntu-20.04",   "cmake_env": "CC=gcc-9"},
          {"name": "Linux Clang 10",   "os": "ubuntu-20.04",   "cmake_env": "CC=clang-10"},
          {"name": "macOS arm64",      "os": "macos-latest",       "cmake_env": "CMAKE_OSX_ARCHITECTURES=arm64"},
          {"name": "macOS x86_64",     "os": "macos-latest",       "cmake_env": "CMAKE_OSX_ARCHITECTURES=x86_64"},
          {"name": "Windows",          "os": "windows-latest"},
        ]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: ubuntu-20.04
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx
    env:
      CMAKE_OPTIONS: -DDEV_MODE=ON
      CMAKE_ENV: ${{ matrix.target.cmake_env }}
    steps:
      - name: list compilers
        if: ${{ contains(matrix.target.os, 'ubuntu') }}
        run: dpkg --list | grep compiler

      - name: Get pushed code
        uses: actions/checkout@v4

      - name: Configure CMake
        run: ${{ env.CMAKE_ENV }} cmake -S . -B _build ${{ env.CMAKE_OPTIONS }}

      - name: Build with CMake
        run: cmake --build _build --config Debug --parallel

      - name: Test installation
        run: |
          cmake --install _build --config Debug --prefix _built
